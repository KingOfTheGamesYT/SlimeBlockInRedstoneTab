plugins {
	id 'fabric-loom' version '0.6-SNAPSHOT'
	id 'com.jfrog.bintray' version "1.8.4"
	id "com.matthewprenger.cursegradle" version "1.4.0"
	id 'maven-publish'
	id "maven"
	id "com.modrinth.minotaur" version "1.1.0"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven { url = "https://jitpack.io" }
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	["fabric-api-base", "fabric-item-groups-v0", "fabric-resource-loader-v0"].forEach {
		include(modImplementation(fabricApi.module(it, project.fabric_version)))
	}
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}

bintray {
	user = System.getenv('BINTRAY_USER')
	key = System.getenv('BINTRAY_KEY')
	publications = ["mavenJava"]
	publish = true
	pkg {
		repo = 'oroarmor'
		name = rootProject.archives_base_name
		userOrg = "oroarmor"
		licenses = ['CC0-1.0']
		vcsUrl = 'https://github.com/OroArmor/SlimeBlockInRedstoneTab.git'
		version {
			name = rootProject.mod_version
		}
	}
}

curseforge {
	if (System.getenv("CURSE_API_KEY") != null) {
		apiKey = System.getenv("CURSE_API_KEY")
		project {
			id = "397597"
			releaseType = "release"
			addGameVersion "Java 8"
			addGameVersion "Fabric"
			changelogType = "html"
			changelog = System.getenv("RELEASE_LOG")
			relations {
				requiredDependency "fabric-api"
			}
			mainArtifact(remapJar.archivePath) {
				displayName = "Slime block in the Redstone Tab - ${project.mod_version}"
			}
			afterEvaluate {
				uploadTask.dependsOn("build")
			}
		}
	}
	options {
		forgeGradleIntegration = false
		javaVersionAutoDetect = false
	}
}

import com.modrinth.minotaur.TaskModrinthUpload

task modrinthFabric (type: TaskModrinthUpload){
	token = System.getenv("MODRINTH_TOKEN") // Use an environment property!
	projectId = 'iHObj4gK'
	versionNumber = "Slime block in the Redstone Tab - ${project.mod_version}"
	uploadFile = remapJar.archivePath // This is the java jar task
	changelog = System.getenv("RELEASE_LOG")
	addLoader('fabric')
}


